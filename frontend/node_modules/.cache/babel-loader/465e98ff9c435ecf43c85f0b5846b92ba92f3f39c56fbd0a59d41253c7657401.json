{"ast":null,"code":"var _jsxFileName = \"/Users/mattdavies/react-app/quote-app/src/QuoteGenerator.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst quotes = [\"The best way to get started is to quit talking and begin doing.\", \"Don't let yesterday take up too much of today.\", \"It's not whether you get knocked down, it's whether you get up.\", \"Simplicity is the soul of efficiency.\", \"Experience is the name everyone gives to their mistakes.\"];\nconst QuoteGenerator = () => {\n  _s();\n  const [index, setIndex] = useState(0);\n  const handleNextQuote = () => {\n    let newIndex = Math.floor(Math.random() * quotes.length);\n    while (newIndex === index) newIndex = Math.floor(Math.random() * quotes.length);\n    setIndex(newIndex);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center min-h-screen bg-gray-900 p-6\",\n    children: [/*#__PURE__*/_jsxDEV(AnimatePresence, {\n      mode: \"wait\",\n      children: /*#__PURE__*/_jsxDEV(motion.p, {\n        initial: {\n          opacity: 0,\n          y: 20\n        },\n        animate: {\n          opacity: 1,\n          y: 0\n        },\n        exit: {\n          opacity: 0,\n          y: -20\n        },\n        transition: {\n          duration: 0.5\n        },\n        children: quotes[index]\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleNextQuote,\n      className: \"px-6 py-2 bg-indigo-500 hover:bg-indigo-600 text-white font-semibold rounded-2xl transition\",\n      children: \"Inspire Me \\u2728\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(QuoteGenerator, \"x2oTrUAHknTo02Ld7gcDOqaxQ8E=\");\n_c = QuoteGenerator;\nexport default QuoteGenerator;\nvar _c;\n$RefreshReg$(_c, \"QuoteGenerator\");","map":{"version":3,"names":["React","useState","AnimatePresence","motion","jsxDEV","_jsxDEV","quotes","QuoteGenerator","_s","index","setIndex","handleNextQuote","newIndex","Math","floor","random","length","className","children","mode","p","initial","opacity","y","animate","exit","transition","duration","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/mattdavies/react-app/quote-app/src/QuoteGenerator.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { AnimatePresence, motion, HTMLMotionProps } from \"framer-motion\";\n\nconst quotes: string[] = [\n  \"The best way to get started is to quit talking and begin doing.\",\n  \"Don't let yesterday take up too much of today.\",\n  \"It's not whether you get knocked down, it's whether you get up.\",\n  \"Simplicity is the soul of efficiency.\",\n  \"Experience is the name everyone gives to their mistakes.\",\n];\n\nconst QuoteGenerator: React.FC = () => {\n  const [index, setIndex] = useState(0);\n\n  const handleNextQuote = () => {\n    let newIndex = Math.floor(Math.random() * quotes.length);\n    while (newIndex === index) newIndex = Math.floor(Math.random() * quotes.length);\n    setIndex(newIndex);\n  };\n\n  return (\n    <div className=\"flex flex-col items-center justify-center min-h-screen bg-gray-900 p-6\">\n      <AnimatePresence mode=\"wait\">\n        {/*\n          Use motion.p with explicit HTMLMotionProps<\"p\"> typing inline\n        */}\n        <motion.p\n        key={index}\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        exit={{ opacity: 0, y: -20 }}\n        transition={{ duration: 0.5 }}\n        >\n        {quotes[index]}\n        </motion.p>\n\n      </AnimatePresence>\n      <button\n        onClick={handleNextQuote}\n        className=\"px-6 py-2 bg-indigo-500 hover:bg-indigo-600 text-white font-semibold rounded-2xl transition\"\n      >\n        Inspire Me âœ¨\n      </button>\n    </div>\n  );\n};\n\nexport default QuoteGenerator;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,eAAe,EAAEC,MAAM,QAAyB,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzE,MAAMC,MAAgB,GAAG,CACvB,iEAAiE,EACjE,gDAAgD,EAChD,iEAAiE,EACjE,uCAAuC,EACvC,0DAA0D,CAC3D;AAED,MAAMC,cAAwB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EAErC,MAAMU,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAIC,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGT,MAAM,CAACU,MAAM,CAAC;IACxD,OAAOJ,QAAQ,KAAKH,KAAK,EAAEG,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGT,MAAM,CAACU,MAAM,CAAC;IAC/EN,QAAQ,CAACE,QAAQ,CAAC;EACpB,CAAC;EAED,oBACEP,OAAA;IAAKY,SAAS,EAAC,wEAAwE;IAAAC,QAAA,gBACrFb,OAAA,CAACH,eAAe;MAACiB,IAAI,EAAC,MAAM;MAAAD,QAAA,eAI1Bb,OAAA,CAACF,MAAM,CAACiB,CAAC;QAETC,OAAO,EAAE;UAAEC,OAAO,EAAE,CAAC;UAAEC,CAAC,EAAE;QAAG,CAAE;QAC/BC,OAAO,EAAE;UAAEF,OAAO,EAAE,CAAC;UAAEC,CAAC,EAAE;QAAE,CAAE;QAC9BE,IAAI,EAAE;UAAEH,OAAO,EAAE,CAAC;UAAEC,CAAC,EAAE,CAAC;QAAG,CAAE;QAC7BG,UAAU,EAAE;UAAEC,QAAQ,EAAE;QAAI,CAAE;QAAAT,QAAA,EAE7BZ,MAAM,CAACG,KAAK;MAAC,GANTA,KAAK;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOA;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEI,CAAC,eAClB1B,OAAA;MACE2B,OAAO,EAAErB,eAAgB;MACzBM,SAAS,EAAC,6FAA6F;MAAAC,QAAA,EACxG;IAED;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACvB,EAAA,CAlCID,cAAwB;AAAA0B,EAAA,GAAxB1B,cAAwB;AAoC9B,eAAeA,cAAc;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}