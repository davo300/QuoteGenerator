{"ast":null,"code":"var _jsxFileName = \"/Users/mattdavies/react-app/quote-app/frontend/src/QuoteGenerator.tsx\",\n  _s = $RefreshSig$();\n// src/QuoteGenerator.tsx\nimport React, { useState, useEffect } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport styles from \"./Quote.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuoteGenerator = () => {\n  _s();\n  const [quote, setQuote] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const fetchQuote = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch(\"http://127.0.0.1:8000/quotes/random\");\n      const data = await response.json();\n      setQuote(data);\n    } catch (error) {\n      console.error(\"Error fetching quote:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchQuote(); // fetch one quote when component mounts\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.quoteBox,\n      children: [/*#__PURE__*/_jsxDEV(AnimatePresence, {\n        mode: \"wait\",\n        children: quote && /*#__PURE__*/_jsxDEV(motion.p, {\n          initial: {\n            opacity: 0,\n            y: 20\n          },\n          animate: {\n            opacity: 1,\n            y: 0\n          },\n          exit: {\n            opacity: 0,\n            y: -20\n          },\n          transition: {\n            duration: 0.5\n          },\n          className: styles.quoteText,\n          children: [\"\\\"\", quote.text, \"\\\"\", quote.author && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.author,\n            children: [\" \\u2014 \", quote.author]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 32\n          }, this)]\n        }, quote.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchQuote,\n        className: styles.button,\n        disabled: loading,\n        children: loading ? \"Loading...\" : \"Inspire Me ✨\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(QuoteGenerator, \"hwc+BmEZiPg1YlRSVQQo+2sHSys=\");\n_c = QuoteGenerator;\nexport default QuoteGenerator;\nvar _c;\n$RefreshReg$(_c, \"QuoteGenerator\");","map":{"version":3,"names":["React","useState","useEffect","motion","AnimatePresence","styles","jsxDEV","_jsxDEV","QuoteGenerator","_s","quote","setQuote","loading","setLoading","fetchQuote","response","fetch","data","json","error","console","className","container","children","quoteBox","mode","p","initial","opacity","y","animate","exit","transition","duration","quoteText","text","author","fileName","_jsxFileName","lineNumber","columnNumber","id","onClick","button","disabled","_c","$RefreshReg$"],"sources":["/Users/mattdavies/react-app/quote-app/frontend/src/QuoteGenerator.tsx"],"sourcesContent":["// src/QuoteGenerator.tsx\nimport React, { useState, useEffect } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport styles from \"./Quote.module.css\";\n\ninterface Quote {\n  id: number;\n  text: string;\n  author?: string;\n}\n\nconst QuoteGenerator: React.FC = () => {\n  const [quote, setQuote] = useState<Quote | null>(null);\n  const [loading, setLoading] = useState(false);\n\n  const fetchQuote = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch(\"http://127.0.0.1:8000/quotes/random\");\n      const data = await response.json();\n      setQuote(data);\n    } catch (error) {\n      console.error(\"Error fetching quote:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchQuote(); // fetch one quote when component mounts\n  }, []);\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.quoteBox}>\n        <AnimatePresence mode=\"wait\">\n          {quote && (\n            <motion.p\n              key={quote.id}\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              exit={{ opacity: 0, y: -20 }}\n              transition={{ duration: 0.5 }}\n              className={styles.quoteText}\n            >\n              \"{quote.text}\"\n              {quote.author && <span className={styles.author}> — {quote.author}</span>}\n            </motion.p>\n          )}\n        </AnimatePresence>\n        <button\n          onClick={fetchQuote}\n          className={styles.button}\n          disabled={loading}\n        >\n          {loading ? \"Loading...\" : \"Inspire Me ✨\"}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default QuoteGenerator;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,MAAM,EAAEC,eAAe,QAAQ,eAAe;AACvD,OAAOC,MAAM,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQxC,MAAMC,cAAwB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAe,IAAI,CAAC;EACtD,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMa,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7BD,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,CAAC;MACnE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCP,QAAQ,CAACM,IAAI,CAAC;IAChB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C,CAAC,SAAS;MACRN,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAEDX,SAAS,CAAC,MAAM;IACdY,UAAU,CAAC,CAAC,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA;IAAKc,SAAS,EAAEhB,MAAM,CAACiB,SAAU;IAAAC,QAAA,eAC/BhB,OAAA;MAAKc,SAAS,EAAEhB,MAAM,CAACmB,QAAS;MAAAD,QAAA,gBAC9BhB,OAAA,CAACH,eAAe;QAACqB,IAAI,EAAC,MAAM;QAAAF,QAAA,EACzBb,KAAK,iBACJH,OAAA,CAACJ,MAAM,CAACuB,CAAC;UAEPC,OAAO,EAAE;YAAEC,OAAO,EAAE,CAAC;YAAEC,CAAC,EAAE;UAAG,CAAE;UAC/BC,OAAO,EAAE;YAAEF,OAAO,EAAE,CAAC;YAAEC,CAAC,EAAE;UAAE,CAAE;UAC9BE,IAAI,EAAE;YAAEH,OAAO,EAAE,CAAC;YAAEC,CAAC,EAAE,CAAC;UAAG,CAAE;UAC7BG,UAAU,EAAE;YAAEC,QAAQ,EAAE;UAAI,CAAE;UAC9BZ,SAAS,EAAEhB,MAAM,CAAC6B,SAAU;UAAAX,QAAA,GAC7B,IACE,EAACb,KAAK,CAACyB,IAAI,EAAC,IACb,EAACzB,KAAK,CAAC0B,MAAM,iBAAI7B,OAAA;YAAMc,SAAS,EAAEhB,MAAM,CAAC+B,MAAO;YAAAb,QAAA,GAAC,UAAG,EAACb,KAAK,CAAC0B,MAAM;UAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA,GARpE9B,KAAK,CAAC+B,EAAE;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OASL;MACX;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACc,CAAC,eAClBjC,OAAA;QACEmC,OAAO,EAAE5B,UAAW;QACpBO,SAAS,EAAEhB,MAAM,CAACsC,MAAO;QACzBC,QAAQ,EAAEhC,OAAQ;QAAAW,QAAA,EAEjBX,OAAO,GAAG,YAAY,GAAG;MAAc;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC/B,EAAA,CAjDID,cAAwB;AAAAqC,EAAA,GAAxBrC,cAAwB;AAmD9B,eAAeA,cAAc;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}