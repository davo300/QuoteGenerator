{"ast":null,"code":"var _jsxFileName = \"/Users/mattdavies/react-app/quote-app/frontend/src/QuoteGenerator.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport AddQuoteForm from \"./AddQuoteForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuoteGenerator = () => {\n  _s();\n  const [quotes, setQuotes] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  useEffect(() => {\n    fetch(\"http://127.0.0.1:8000/quotes\").then(res => res.json()).then(data => setQuotes(data)).catch(err => console.error(\"Error fetching quotes:\", err));\n  }, []);\n  const nextQuote = () => {\n    if (quotes.length === 0) return;\n    setCurrentIndex(prevIndex => (prevIndex + 1) % quotes.length);\n  };\n  const handleQuoteAdded = () => {\n    // Refresh quotes from backend after adding\n    fetch(\"http://127.0.0.1:8000/quotes\").then(res => res.json()).then(data => setQuotes(data)).catch(err => console.error(\"Error fetching quotes:\", err));\n  };\n  const currentQuote = quotes[currentIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center min-h-screen space-y-6 bg-gray-100 p-4\",\n    children: [currentQuote && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-6 rounded-2xl shadow-md text-center max-w-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-xl font-semibold\",\n        children: [\"\\\"\", currentQuote.text, \"\\\"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600 mt-2\",\n        children: currentQuote.author ? `— ${currentQuote.author}` : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: nextQuote,\n      className: \"px-6 py-2 bg-purple-500 text-white font-semibold rounded-lg shadow hover:bg-purple-600 transition\",\n      children: \"Next Quote\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddQuoteForm, {\n      onQuoteAdded: handleQuoteAdded\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(QuoteGenerator, \"LUqNuC9z2bGzngei3BCpgRzgz3Q=\");\n_c = QuoteGenerator;\nexport default QuoteGenerator;\nvar _c;\n$RefreshReg$(_c, \"QuoteGenerator\");","map":{"version":3,"names":["React","useState","useEffect","AddQuoteForm","jsxDEV","_jsxDEV","QuoteGenerator","_s","quotes","setQuotes","currentIndex","setCurrentIndex","fetch","then","res","json","data","catch","err","console","error","nextQuote","length","prevIndex","handleQuoteAdded","currentQuote","className","children","text","fileName","_jsxFileName","lineNumber","columnNumber","author","onClick","onQuoteAdded","_c","$RefreshReg$"],"sources":["/Users/mattdavies/react-app/quote-app/frontend/src/QuoteGenerator.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport AddQuoteForm from \"./AddQuoteForm\";\n\ninterface Quote {\n  id: number;\n  text: string;\n  author?: string;\n}\n\nconst QuoteGenerator: React.FC = () => {\n  const [quotes, setQuotes] = useState<Quote[]>([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  useEffect(() => {\n    fetch(\"http://127.0.0.1:8000/quotes\")\n      .then((res) => res.json())\n      .then((data) => setQuotes(data))\n      .catch((err) => console.error(\"Error fetching quotes:\", err));\n  }, []);\n\n  const nextQuote = () => {\n    if (quotes.length === 0) return;\n    setCurrentIndex((prevIndex) => (prevIndex + 1) % quotes.length);\n  };\n\n  const handleQuoteAdded = () => {\n    // Refresh quotes from backend after adding\n    fetch(\"http://127.0.0.1:8000/quotes\")\n      .then((res) => res.json())\n      .then((data) => setQuotes(data))\n      .catch((err) => console.error(\"Error fetching quotes:\", err));\n  };\n\n  const currentQuote = quotes[currentIndex];\n\n  return (\n    <div className=\"flex flex-col items-center justify-center min-h-screen space-y-6 bg-gray-100 p-4\">\n      \n      {/* Quote display */}\n      {currentQuote && (\n        <div className=\"bg-white p-6 rounded-2xl shadow-md text-center max-w-md\">\n          <p className=\"text-xl font-semibold\">\"{currentQuote.text}\"</p>\n          <p className=\"text-gray-600 mt-2\">\n            {currentQuote.author ? `— ${currentQuote.author}` : \"\"}\n          </p>\n        </div>\n      )}\n\n      {/* Next quote button */}\n      <button\n        onClick={nextQuote}\n        className=\"px-6 py-2 bg-purple-500 text-white font-semibold rounded-lg shadow hover:bg-purple-600 transition\"\n      >\n        Next Quote\n      </button>\n\n      {/* Add new quote form */}\n      <AddQuoteForm onQuoteAdded={handleQuoteAdded} />\n    </div>\n  );\n};\n\nexport default QuoteGenerator;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQ1C,MAAMC,cAAwB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAU,EAAE,CAAC;EACjD,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EAEnDC,SAAS,CAAC,MAAM;IACdU,KAAK,CAAC,8BAA8B,CAAC,CAClCC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAKP,SAAS,CAACO,IAAI,CAAC,CAAC,CAC/BC,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEF,GAAG,CAAC,CAAC;EACjE,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,SAAS,GAAGA,CAAA,KAAM;IACtB,IAAIb,MAAM,CAACc,MAAM,KAAK,CAAC,EAAE;IACzBX,eAAe,CAAEY,SAAS,IAAK,CAACA,SAAS,GAAG,CAAC,IAAIf,MAAM,CAACc,MAAM,CAAC;EACjE,CAAC;EAED,MAAME,gBAAgB,GAAGA,CAAA,KAAM;IAC7B;IACAZ,KAAK,CAAC,8BAA8B,CAAC,CAClCC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAKP,SAAS,CAACO,IAAI,CAAC,CAAC,CAC/BC,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEF,GAAG,CAAC,CAAC;EACjE,CAAC;EAED,MAAMO,YAAY,GAAGjB,MAAM,CAACE,YAAY,CAAC;EAEzC,oBACEL,OAAA;IAAKqB,SAAS,EAAC,kFAAkF;IAAAC,QAAA,GAG9FF,YAAY,iBACXpB,OAAA;MAAKqB,SAAS,EAAC,yDAAyD;MAAAC,QAAA,gBACtEtB,OAAA;QAAGqB,SAAS,EAAC,uBAAuB;QAAAC,QAAA,GAAC,IAAC,EAACF,YAAY,CAACG,IAAI,EAAC,IAAC;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC9D3B,OAAA;QAAGqB,SAAS,EAAC,oBAAoB;QAAAC,QAAA,EAC9BF,YAAY,CAACQ,MAAM,GAAG,KAAKR,YAAY,CAACQ,MAAM,EAAE,GAAG;MAAE;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CACN,eAGD3B,OAAA;MACE6B,OAAO,EAAEb,SAAU;MACnBK,SAAS,EAAC,mGAAmG;MAAAC,QAAA,EAC9G;IAED;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAGT3B,OAAA,CAACF,YAAY;MAACgC,YAAY,EAAEX;IAAiB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CAAC;AAEV,CAAC;AAACzB,EAAA,CAnDID,cAAwB;AAAA8B,EAAA,GAAxB9B,cAAwB;AAqD9B,eAAeA,cAAc;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}