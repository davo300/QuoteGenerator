{"ast":null,"code":"var _jsxFileName = \"/Users/mattdavies/react-app/quote-app/frontend/src/QuoteGenerator.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Quote.module.css\"; // üëà we'll create this file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuoteGenerator = () => {\n  _s();\n  const [quote, setQuote] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const handleNextQuote = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch(\"http://127.0.0.1:8000/quotes/random\");\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const randomQuote = await response.json();\n      setQuote(randomQuote);\n    } catch (error) {\n      console.error(\"Error fetching random quote:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quote-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quote-box\",\n      children: quote ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"quote-text\",\n        children: [\"\\u201C\", quote.text, \"\\u201D \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"quote-author\",\n          children: [\"\\u2014 \", quote.author || \"Unknown\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"quote-placeholder\",\n        children: \"Click the button to get inspired \\u2728\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"inspire-button\",\n      onClick: handleNextQuote,\n      disabled: loading,\n      children: loading ? \"Loading...\" : \"Inspire Me ‚ú®\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(QuoteGenerator, \"xFO4dDUG673qkFos98p9kFYmdGM=\");\n_c = QuoteGenerator;\nexport default QuoteGenerator;\nvar _c;\n$RefreshReg$(_c, \"QuoteGenerator\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","QuoteGenerator","_s","quote","setQuote","loading","setLoading","handleNextQuote","response","fetch","ok","Error","status","randomQuote","json","error","console","className","children","text","author","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/mattdavies/react-app/quote-app/frontend/src/QuoteGenerator.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./Quote.module.css\"; // üëà we'll create this file for styling\n\nconst QuoteGenerator: React.FC = () => {\n  const [quote, setQuote] = useState<{ text: string; author?: string } | null>(null);\n  const [loading, setLoading] = useState(false);\n\n  const handleNextQuote = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch(\"http://127.0.0.1:8000/quotes/random\");\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const randomQuote = await response.json();\n      setQuote(randomQuote);\n    } catch (error) {\n      console.error(\"Error fetching random quote:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"quote-container\">\n      <div className=\"quote-box\">\n        {quote ? (\n          <p className=\"quote-text\">\n            ‚Äú{quote.text}‚Äù <span className=\"quote-author\">‚Äî {quote.author || \"Unknown\"}</span>\n          </p>\n        ) : (\n          <p className=\"quote-placeholder\">Click the button to get inspired ‚ú®</p>\n        )}\n      </div>\n\n      <button className=\"inspire-button\" onClick={handleNextQuote} disabled={loading}>\n        {loading ? \"Loading...\" : \"Inspire Me ‚ú®\"}\n      </button>\n    </div>\n  );\n};\n\nexport default QuoteGenerator;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,oBAAoB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,cAAwB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAA2C,IAAI,CAAC;EAClF,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMS,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClCD,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,CAAC;MACnE,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBH,QAAQ,CAACI,MAAM,EAAE,CAAC;MAC3D;MACA,MAAMC,WAAW,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;MACzCV,QAAQ,CAACS,WAAW,CAAC;IACvB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD,CAAC,SAAS;MACRT,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACEN,OAAA;IAAKiB,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9BlB,OAAA;MAAKiB,SAAS,EAAC,WAAW;MAAAC,QAAA,EACvBf,KAAK,gBACJH,OAAA;QAAGiB,SAAS,EAAC,YAAY;QAAAC,QAAA,GAAC,QACvB,EAACf,KAAK,CAACgB,IAAI,EAAC,SAAE,eAAAnB,OAAA;UAAMiB,SAAS,EAAC,cAAc;UAAAC,QAAA,GAAC,SAAE,EAACf,KAAK,CAACiB,MAAM,IAAI,SAAS;QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjF,CAAC,gBAEJxB,OAAA;QAAGiB,SAAS,EAAC,mBAAmB;QAAAC,QAAA,EAAC;MAAkC;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IACvE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAENxB,OAAA;MAAQiB,SAAS,EAAC,gBAAgB;MAACQ,OAAO,EAAElB,eAAgB;MAACmB,QAAQ,EAAErB,OAAQ;MAAAa,QAAA,EAC5Eb,OAAO,GAAG,YAAY,GAAG;IAAc;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACtB,EAAA,CArCID,cAAwB;AAAA0B,EAAA,GAAxB1B,cAAwB;AAuC9B,eAAeA,cAAc;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}