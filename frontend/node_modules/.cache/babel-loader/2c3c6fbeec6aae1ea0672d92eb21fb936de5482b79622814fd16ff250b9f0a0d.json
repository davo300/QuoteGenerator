{"ast":null,"code":"var _jsxFileName = \"/Users/mattdavies/react-app/quote-app/frontend/src/QuoteGenerator.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./QuoteGenerator.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuoteGenerator = () => {\n  _s();\n  const [quotes, setQuotes] = useState([]);\n  const [index, setIndex] = useState(0);\n  useEffect(() => {\n    const fetchQuotes = async () => {\n      try {\n        const response = await fetch(\"http://127.0.0.1:8000/quotes\");\n        const data = await response.json();\n        setQuotes(data);\n      } catch (error) {\n        console.error(\"Error fetching quotes:\", error);\n      }\n    };\n    fetchQuotes();\n  }, []);\n  const handleNextQuote = () => {\n    if (quotes.length > 0) {\n      setIndex(prevIndex => (prevIndex + 1) % quotes.length);\n    }\n  };\n  if (quotes.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading quotes...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quote-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"quote-text\",\n      children: [\"\\u201C\", quotes[index].text, \"\\u201D \\u2014 \", quotes[index].author || \"Unknown\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"quote-button\",\n      onClick: handleNextQuote,\n      children: \"Next Quote \\u27A1\\uFE0F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(QuoteGenerator, \"HlBbjdu2V5k6sjaUZEYcRDaqMJo=\");\n_c = QuoteGenerator;\nexport default QuoteGenerator;\nvar _c;\n$RefreshReg$(_c, \"QuoteGenerator\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","QuoteGenerator","_s","quotes","setQuotes","index","setIndex","fetchQuotes","response","fetch","data","json","error","console","handleNextQuote","length","prevIndex","children","fileName","_jsxFileName","lineNumber","columnNumber","className","text","author","onClick","_c","$RefreshReg$"],"sources":["/Users/mattdavies/react-app/quote-app/frontend/src/QuoteGenerator.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./QuoteGenerator.css\";\n\ninterface Quote {\n  id: number;\n  text: string;\n  author?: string;\n}\n\nconst QuoteGenerator: React.FC = () => {\n  const [quotes, setQuotes] = useState<Quote[]>([]);\n  const [index, setIndex] = useState(0);\n\n  useEffect(() => {\n    const fetchQuotes = async () => {\n      try {\n        const response = await fetch(\"http://127.0.0.1:8000/quotes\");\n        const data = await response.json();\n        setQuotes(data);\n      } catch (error) {\n        console.error(\"Error fetching quotes:\", error);\n      }\n    };\n\n    fetchQuotes();\n  }, []);\n\n  const handleNextQuote = () => {\n    if (quotes.length > 0) {\n      setIndex((prevIndex) => (prevIndex + 1) % quotes.length);\n    }\n  };\n\n  if (quotes.length === 0) {\n    return <p>Loading quotes...</p>;\n  }\n\n  return (\n    <div className=\"quote-container\">\n      <p className=\"quote-text\">\n        “{quotes[index].text}” — {quotes[index].author || \"Unknown\"}\n      </p>\n      <button className=\"quote-button\" onClick={handleNextQuote}>\n        Next Quote ➡️\n      </button>\n    </div>\n  );\n};\n\nexport default QuoteGenerator;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQ9B,MAAMC,cAAwB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAU,EAAE,CAAC;EACjD,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EAErCC,SAAS,CAAC,MAAM;IACd,MAAMS,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;QAC5D,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCP,SAAS,CAACM,IAAI,CAAC;MACjB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF,CAAC;IAEDL,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAIX,MAAM,CAACY,MAAM,GAAG,CAAC,EAAE;MACrBT,QAAQ,CAAEU,SAAS,IAAK,CAACA,SAAS,GAAG,CAAC,IAAIb,MAAM,CAACY,MAAM,CAAC;IAC1D;EACF,CAAC;EAED,IAAIZ,MAAM,CAACY,MAAM,KAAK,CAAC,EAAE;IACvB,oBAAOf,OAAA;MAAAiB,QAAA,EAAG;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EACjC;EAEA,oBACErB,OAAA;IAAKsB,SAAS,EAAC,iBAAiB;IAAAL,QAAA,gBAC9BjB,OAAA;MAAGsB,SAAS,EAAC,YAAY;MAAAL,QAAA,GAAC,QACvB,EAACd,MAAM,CAACE,KAAK,CAAC,CAACkB,IAAI,EAAC,gBAAI,EAACpB,MAAM,CAACE,KAAK,CAAC,CAACmB,MAAM,IAAI,SAAS;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1D,CAAC,eACJrB,OAAA;MAAQsB,SAAS,EAAC,cAAc;MAACG,OAAO,EAAEX,eAAgB;MAAAG,QAAA,EAAC;IAE3D;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACnB,EAAA,CAtCID,cAAwB;AAAAyB,EAAA,GAAxBzB,cAAwB;AAwC9B,eAAeA,cAAc;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}