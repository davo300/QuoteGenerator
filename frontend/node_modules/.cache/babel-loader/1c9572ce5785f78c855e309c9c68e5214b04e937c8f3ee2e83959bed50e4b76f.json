{"ast":null,"code":"var _jsxFileName = \"/Users/mattdavies/react-app/quote-app/frontend/src/QuoteGenerator.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuoteGenerator = () => {\n  _s();\n  const [quote, setQuote] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const fetchQuote = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch(\"http://127.0.0.1:8000/quotes/random\");\n      const data = await response.json();\n      setQuote(data);\n    } catch (error) {\n      console.error(\"Error fetching quote:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchQuote(); // fetch first quote on mount\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"100vh\",\n      flexDirection: \"column\",\n      backgroundColor: \"#1e1e1e\",\n      // dark background\n      padding: \"2rem\"\n    },\n    children: [quote && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: \"1.5rem\",\n        color: \"#f0f0f0\",\n        marginBottom: \"2rem\",\n        textAlign: \"center\"\n      },\n      children: [\"\\\"\", quote.text, \"\\\" \", quote.author && `— ${quote.author}`]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchQuote,\n      style: {\n        backgroundColor: \"#4f46e5\",\n        color: \"white\",\n        fontWeight: 600,\n        padding: \"0.75rem 1.5rem\",\n        borderRadius: \"9999px\",\n        border: \"none\",\n        cursor: \"pointer\"\n      },\n      disabled: loading,\n      children: loading ? \"Loading...\" : \"Inspire Me ✨\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(QuoteGenerator, \"hwc+BmEZiPg1YlRSVQQo+2sHSys=\");\n_c = QuoteGenerator;\nexport default QuoteGenerator;\nvar _c;\n$RefreshReg$(_c, \"QuoteGenerator\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","QuoteGenerator","_s","quote","setQuote","loading","setLoading","fetchQuote","response","fetch","data","json","error","console","style","display","justifyContent","alignItems","minHeight","flexDirection","backgroundColor","padding","children","fontSize","color","marginBottom","textAlign","text","author","fileName","_jsxFileName","lineNumber","columnNumber","onClick","fontWeight","borderRadius","border","cursor","disabled","_c","$RefreshReg$"],"sources":["/Users/mattdavies/react-app/quote-app/frontend/src/QuoteGenerator.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styles from \"./Quote.module.css\";\n\ninterface Quote {\n  id: number;\n  text: string;\n  author?: string;\n}\n\nconst QuoteGenerator: React.FC = () => {\n  const [quote, setQuote] = useState<Quote | null>(null);\n  const [loading, setLoading] = useState(false);\n\n  const fetchQuote = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch(\"http://127.0.0.1:8000/quotes/random\");\n      const data = await response.json();\n      setQuote(data);\n    } catch (error) {\n      console.error(\"Error fetching quote:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchQuote(); // fetch first quote on mount\n  }, []);\n\n  return (\n    <div style={{\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"100vh\",\n      flexDirection: \"column\",\n      backgroundColor: \"#1e1e1e\", // dark background\n      padding: \"2rem\"\n    }}>\n      {quote && (\n        <p style={{\n          fontSize: \"1.5rem\",\n          color: \"#f0f0f0\",\n          marginBottom: \"2rem\",\n          textAlign: \"center\"\n        }}>\n          \"{quote.text}\" {quote.author && `— ${quote.author}`}\n        </p>\n      )}\n\n      <button\n        onClick={fetchQuote}\n        style={{\n          backgroundColor: \"#4f46e5\",\n          color: \"white\",\n          fontWeight: 600,\n          padding: \"0.75rem 1.5rem\",\n          borderRadius: \"9999px\",\n          border: \"none\",\n          cursor: \"pointer\"\n        }}\n        disabled={loading}\n      >\n        {loading ? \"Loading...\" : \"Inspire Me ✨\"}\n      </button>\n    </div>\n  );\n};\n\nexport default QuoteGenerator;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AASnD,MAAMC,cAAwB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAe,IAAI,CAAC;EACtD,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMU,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7BD,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,CAAC;MACnE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCP,QAAQ,CAACM,IAAI,CAAC;IAChB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C,CAAC,SAAS;MACRN,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAEDR,SAAS,CAAC,MAAM;IACdS,UAAU,CAAC,CAAC,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA;IAAKc,KAAK,EAAE;MACVC,OAAO,EAAE,MAAM;MACfC,cAAc,EAAE,QAAQ;MACxBC,UAAU,EAAE,QAAQ;MACpBC,SAAS,EAAE,OAAO;MAClBC,aAAa,EAAE,QAAQ;MACvBC,eAAe,EAAE,SAAS;MAAE;MAC5BC,OAAO,EAAE;IACX,CAAE;IAAAC,QAAA,GACCnB,KAAK,iBACJH,OAAA;MAAGc,KAAK,EAAE;QACRS,QAAQ,EAAE,QAAQ;QAClBC,KAAK,EAAE,SAAS;QAChBC,YAAY,EAAE,MAAM;QACpBC,SAAS,EAAE;MACb,CAAE;MAAAJ,QAAA,GAAC,IACA,EAACnB,KAAK,CAACwB,IAAI,EAAC,KAAE,EAACxB,KAAK,CAACyB,MAAM,IAAI,KAAKzB,KAAK,CAACyB,MAAM,EAAE;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CACJ,eAEDhC,OAAA;MACEiC,OAAO,EAAE1B,UAAW;MACpBO,KAAK,EAAE;QACLM,eAAe,EAAE,SAAS;QAC1BI,KAAK,EAAE,OAAO;QACdU,UAAU,EAAE,GAAG;QACfb,OAAO,EAAE,gBAAgB;QACzBc,YAAY,EAAE,QAAQ;QACtBC,MAAM,EAAE,MAAM;QACdC,MAAM,EAAE;MACV,CAAE;MACFC,QAAQ,EAAEjC,OAAQ;MAAAiB,QAAA,EAEjBjB,OAAO,GAAG,YAAY,GAAG;IAAc;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAAC9B,EAAA,CA3DID,cAAwB;AAAAsC,EAAA,GAAxBtC,cAAwB;AA6D9B,eAAeA,cAAc;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}