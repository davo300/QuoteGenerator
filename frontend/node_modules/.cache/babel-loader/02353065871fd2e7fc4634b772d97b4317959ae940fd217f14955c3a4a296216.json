{"ast":null,"code":"var _jsxFileName = \"/Users/mattdavies/react-app/quote-app/frontend/src/AddQuoteForm.tsx\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddQuoteForm = ({\n  onQuoteAdded\n}) => {\n  _s();\n  const [text, setText] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(\"http://127.0.0.1:8000/quotes\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          text,\n          author\n        })\n      });\n      if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n      const addedQuote = await response.json();\n      console.log(\"Quote added:\", addedQuote);\n\n      // Reset form\n      setText(\"\");\n      setAuthor(\"\");\n\n      // Notify parent to refresh quotes\n      onQuoteAdded();\n    } catch (error) {\n      console.error(\"Error adding quote:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"flex flex-col gap-2\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Quote text\",\n      value: text,\n      onChange: e => setText(e.target.value),\n      required: true,\n      className: \"p-2 border rounded\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Author (optional)\",\n      value: author,\n      onChange: e => setAuthor(e.target.value),\n      className: \"p-2 border rounded\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"bg-blue-500 text-white p-2 rounded hover:opacity-90\",\n      children: \"Add Quote\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(AddQuoteForm, \"zsK5dsOK6XmPRH4bhREjqE9E2G0=\");\n_c = AddQuoteForm;\nexport default AddQuoteForm;\nvar _c;\n$RefreshReg$(_c, \"AddQuoteForm\");","map":{"version":3,"names":["AddQuoteForm","onQuoteAdded","_s","text","setText","useState","author","setAuthor","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","addedQuote","json","console","log","error","_jsxDEV","onSubmit","className","children","type","placeholder","value","onChange","target","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mattdavies/react-app/quote-app/frontend/src/AddQuoteForm.tsx"],"sourcesContent":["const AddQuoteForm: React.FC<{ onQuoteAdded: () => void }> = ({ onQuoteAdded }) => {\n  const [text, setText] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    try {\n      const response = await fetch(\"http://127.0.0.1:8000/quotes\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ text, author }),\n      });\n      if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n      const addedQuote = await response.json();\n      console.log(\"Quote added:\", addedQuote);\n\n      // Reset form\n      setText(\"\");\n      setAuthor(\"\");\n\n      // Notify parent to refresh quotes\n      onQuoteAdded();\n    } catch (error) {\n      console.error(\"Error adding quote:\", error);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"flex flex-col gap-2\">\n      <input\n        type=\"text\"\n        placeholder=\"Quote text\"\n        value={text}\n        onChange={(e) => setText(e.target.value)}\n        required\n        className=\"p-2 border rounded\"\n      />\n      <input\n        type=\"text\"\n        placeholder=\"Author (optional)\"\n        value={author}\n        onChange={(e) => setAuthor(e.target.value)}\n        className=\"p-2 border rounded\"\n      />\n      <button type=\"submit\" className=\"bg-blue-500 text-white p-2 rounded hover:opacity-90\">\n        Add Quote\n      </button>\n    </form>\n  );\n};\n\nexport default AddQuoteForm;\n"],"mappings":";;;AAAA,MAAMA,YAAoD,GAAGA,CAAC;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACjF,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGF,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMG,YAAY,GAAG,MAAOC,CAAkB,IAAK;IACjDA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;QAC3DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEd,IAAI;UAAEG;QAAO,CAAC;MACvC,CAAC,CAAC;MACF,IAAI,CAACK,QAAQ,CAACO,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,uBAAuBR,QAAQ,CAACS,MAAM,EAAE,CAAC;MAC3E,MAAMC,UAAU,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;MACxCC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEH,UAAU,CAAC;;MAEvC;MACAjB,OAAO,CAAC,EAAE,CAAC;MACXG,SAAS,CAAC,EAAE,CAAC;;MAEb;MACAN,YAAY,CAAC,CAAC;IAChB,CAAC,CAAC,OAAOwB,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC7C;EACF,CAAC;EAED,oBACEC,OAAA;IAAMC,QAAQ,EAAEnB,YAAa;IAACoB,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAC3DH,OAAA;MACEI,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,YAAY;MACxBC,KAAK,EAAE7B,IAAK;MACZ8B,QAAQ,EAAGxB,CAAC,IAAKL,OAAO,CAACK,CAAC,CAACyB,MAAM,CAACF,KAAK,CAAE;MACzCG,QAAQ;MACRP,SAAS,EAAC;IAAoB;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC,eACFb,OAAA;MACEI,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,mBAAmB;MAC/BC,KAAK,EAAE1B,MAAO;MACd2B,QAAQ,EAAGxB,CAAC,IAAKF,SAAS,CAACE,CAAC,CAACyB,MAAM,CAACF,KAAK,CAAE;MAC3CJ,SAAS,EAAC;IAAoB;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC,eACFb,OAAA;MAAQI,IAAI,EAAC,QAAQ;MAACF,SAAS,EAAC,qDAAqD;MAAAC,QAAA,EAAC;IAEtF;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEX,CAAC;AAACrC,EAAA,CAjDIF,YAAoD;AAAAwC,EAAA,GAApDxC,YAAoD;AAmD1D,eAAeA,YAAY;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}